{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { auth, db } from \"../../firebase/config\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Comments = function (_Component) {\n  _inherits(Comments, _Component);\n  var _super = _createSuper(Comments);\n  function Comments() {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this);\n    _this.state = {\n      listaPost: [],\n      listaComments: []\n    };\n    return _this;\n  }\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      db.collection('posts').onSnapshot(function (posteos) {\n        var postsAMostrar = [];\n        posteos.forEach(function (unPost) {\n          postsAMostrar.push({\n            id: unPost.id,\n            datos: unPost.data()\n          });\n        });\n        _this2.setState({\n          listaPost: postsAMostrar\n        });\n      });\n      db.collection('posts').where('photo', '==', this.props.route.params).onSnapshot(function (data) {\n        var info = [];\n        data.forEach(function (i) {\n          info.push({\n            id: i.id,\n            datos: i.data()\n          });\n        });\n        _this2.setState({\n          listaComments: info\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      console.log(this.props);\n      console.log(this.state.listaComments);\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate(\"Menu\");\n          },\n          style: styles.coontainerFlecha,\n          children: _jsx(FontAwesome, {\n            style: styles.flecha,\n            name: \"arrow-left\",\n            size: \"large\"\n          })\n        }), _jsx(FlatList, {\n          data: this.state.listaComments[0].comments,\n          keyExtractor: function keyExtractor(unComment) {\n            return unComment.id;\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(Text, {\n              children: [\" \", item, \" \"]\n            });\n          }\n        }), _jsxs(Text, {\n          children: [\" \", this.state.listaComments[0]]\n        })]\n      });\n    }\n  }]);\n  return Comments;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    backgroundColor: 'white'\n  }\n});\nexport default Comments;","map":{"version":3,"names":["React","Component","TextInput","TouchableOpacity","View","Text","StyleSheet","FlatList","auth","db","FontAwesome","jsx","_jsx","jsxs","_jsxs","Comments","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","listaPost","listaComments","_createClass","key","value","componentDidMount","_this2","collection","onSnapshot","posteos","postsAMostrar","forEach","unPost","push","id","datos","data","setState","where","props","route","params","info","i","render","_this3","console","log","style","styles","container","children","onPress","navigation","navigate","coontainerFlecha","flecha","name","size","comments","keyExtractor","unComment","renderItem","_ref","item","create","height","backgroundColor"],"sources":["C:/Users/guada/OneDrive/Escritorio/progra3/integrador-parte2/src/screens/Comments/Comments.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList \r\n} from \"react-native\";\r\n\r\n\r\nimport { auth, db } from \"../../firebase/config\";\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\n\r\n\r\nclass Comments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listaPost: [],\r\n      listaComments: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    //Traer datos\r\n    db.collection('posts').onSnapshot(\r\n        posteos => {\r\n            let postsAMostrar = [];\r\n\r\n            posteos.forEach( unPost => {\r\n                postsAMostrar.push(\r\n                    {\r\n                        id: unPost.id,\r\n                        datos: unPost.data()\r\n                    }\r\n                )\r\n            })\r\n\r\n            this.setState({\r\n                listaPost: postsAMostrar\r\n            })\r\n        }\r\n    )\r\n     db.collection('posts').where('photo','==', this.props.route.params).onSnapshot(\r\n      data => {\r\n          let info = []\r\n          data.forEach( i => {\r\n              info.push(\r\n                {\r\n                  id: i.id,\r\n                  datos: i.data()\r\n                })\r\n            })\r\n\r\n            this.setState({\r\n                listaComments: info \r\n            })\r\n            ;\r\n      })\r\n    }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state.listaComments);\r\n    return (\r\n      <View style={styles.container}>     \r\n        <TouchableOpacity\r\n          onPress={() => this.props.navigation.navigate(\"Menu\")}\r\n          style={styles.coontainerFlecha}>\r\n         <FontAwesome style={styles.flecha} name=\"arrow-left\" size='large'/>\r\n       </TouchableOpacity>\r\n       <FlatList \r\n          data= {this.state.listaComments[0].comments}\r\n          keyExtractor={ unComment => unComment.id }\r\n          renderItem={ ({item}) => <Text> {item} </Text> }\r\n        />\r\n          <Text> {this.state.listaComments[0]}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    backgroundColor: 'white'\r\n  },\r\n  \r\n});\r\n\r\nexport default Comments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}